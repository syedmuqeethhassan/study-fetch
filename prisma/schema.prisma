generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @default(cuid())
  email        String    @unique
  passwordHash String
  name         String
  pdfs         Pdf[]
  sessions     Session[]
  messages     Message[]
}

model Session {
  id      String   @id @default(cuid())
  userId  String
  expires DateTime
  user    User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Pdf {
  id        String   @id @default(cuid())
  userId    String
  filename  String
  mimeType  String
  sizeBytes Int
  data      Bytes
  createdAt DateTime @default(now())
  chunks    Chunk[]
  messages  Message[]
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Chunk {
  id         String                 @id @default(cuid())
  content    String
  embedding  Unsupported("vector")?
  pdfId      String
  pageNumber Int?
  createdAt  DateTime               @default(now())
  pdf        Pdf                    @relation(fields: [pdfId], references: [id], onDelete: Cascade)

  @@index([pdfId])
  @@index([embedding])
}

model Message {
  id        String   @id @default(cuid())
  content   String
  role      String   // 'user' or 'assistant'
  userId    String
  pdfId     String?  // Optional, to associate messages with specific PDF
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  pdf       Pdf?     @relation(fields: [pdfId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([pdfId])
  @@index([createdAt])
}
